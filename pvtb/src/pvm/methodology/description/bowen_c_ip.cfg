##################################################
##!!ALERT: no upper-case in the name can be used, either it will miss
##################################################
[BASE]
#inheritedfrom VEGA20C
base = vega20c_ip.cfg
#below param will be overwritten or added in bowen
[PARAMETER]
# the max client_id for tcp is 87
client_id_is_tcp = 87
[CONFIG]
se/core = 4
sh/se = 1
cu/se = 12
tcc_bank = 32
#CP
cp_pipes = 8
cp_csdata_bus = 8
#SPI
#spi to vgpr serial bus, two buses connect to sp0 and sp1
#!!! although we have 2 vdata bus per SPI, only one can work at a same time
#Therefore, it is same as 1
spi_vdata_bus = 1
spi_vdata_data_bw = 64
#spi-sq-cmd, unit is bit
spisq_bw = 206
spisq_bus = 1
#LDS
lds_sp_read_data_bw = 4
sp_lds_idx_data_bw = 4
# per SP owns 16 buses
lds_sp_read_data_bus = 16
sp_lds_idx_data_bus = 16
#TCP<->TCR
tcr_tcp_ret_data_data_bw = 64
tcr_tcp_ret_data_bus = 2
tcp_tcr_hole_data_data_bw = 64
tcp_tcr_hole_data_bus = 1
#TCC<->TCR
tcc_tcr_rdata_data_bw = 64
tcc_tcr_rdata_bus = 2
tcr_tcc_wdata_data_bw = 64
tcr_tcc_wdata_bus = 1
#EA<->TCC
ea_tcc_rdret_data_bw = 64
ea_tcc_rdret_bus = 1
tcc_ea_wrret_data_bw = 64
tcc_ea_wrret_bus = 1
#SX->GDS
sx_gds_write_data_bus = 1
sx_gds_write_data_bw = 64
[CAPACITY]
# for RA block in SPI to alloc wave
spi_alloc_wave64 = 0.25
# per SE will get and use baton 5 cycles with repeater
spi_use_baton = 5
##TCP. a 128B request follows one cycle idle
tcp_tcr_64byte_req = 1
tcp_tcr_128byte_req = 0.5
##command to TA
# Unit is vgpr per cycle
sq_sp_src_simd_alloc = 0.25
#below v_pk-inst is new in bowen
simd_exec_vop16_pk = 16
simd_exec_vop32_pk = 16
#below v_macc-inst is new in bowen
simd_exec_vop64_mmac_16x16x4 = 2
simd_exec_vop32_mmac_16x16x4 = 2
simd_exec_vop32_mmac_16x16x8 = 2
simd_exec_vop32_mmac_f32_16x16x8 = 8
simd_exec_vop16_mmac_f32_16x16x16 = 8
simd_exec_vop8_mmac_i32_16x16x32 = 8
simd_exec_vop4_mmac_i32_16x16x64 = 8
simd_exec_vop64_mmac_16x16x4_dpfp0 = 2
simd_exec_vop64_mmac_16x16x4_dpfp1 = 1
simd_exec_vop64_mmac_16x16x4_dpfp2 = 0.5
simd_exec_vop64_mmac_16x16x4_dpfp3 = 0.125
simd_exec_vop64_fma_dpfp0 = 16
simd_exec_vop64_fma_dpfp1 = 8
simd_exec_vop64_fma_dpfp2 = 4
simd_exec_vop64_fma_dpfp3 = 1

# unit is Qcycle
vr_read_sgpr_as_lane_select_then_v_read_sgpr_as_constant = 0
vr_read_sgpr_as_lane_select_then_v_read_sgpr_as_carry_in = 0
vr_read_sgpr_as_lane_select_then_vr_read_sgpr_as_lane_select = 4
vr_read_sgpr_as_lane_select_then_vw_read_sgpr_as_lane_select = 4
v_write_vcc_then_v_read_sgpr_as_constant = 2
v_write_vcc_then_v_read_sgpr_as_carry_in = 0
v_write_vcc_then_v_write_vcc = 0
v_write_vcc_then_division = 0
division_then_v_read_sgpr_as_constant = 2
division_then_v_read_sgpr_as_carry_in = 0
division_then_division = 0
division_then_v_write_vcc = 0
#JIRA-KMPS-146: although the delay inserted by EX is 4, v_lane inst need 2 Qcycles to issue, and it equals to 5 Qcycle
v_write_vcc_then_vr_read_sgpr_as_lane_select = 5
v_write_vcc_then_vw_read_sgpr_as_lane_select = 4
division_then_vr_read_sgpr_as_lane_select = 5
division_then_vw_read_sgpr_as_lane_select = 4
v_write_exec_then_v_read_exec = 2
v_write_exec_then_v_write_vcc = 0
v_write_exec_then_v_read_sgpr_as_constant = 0
v_write_exec_then_v_read_sgpr_as_carry_in = 0
v_write_vgpr_then_vr_read_sgpr_as_lane_select = 1
v_write_exec_then_vr_read_sgpr_as_lane_select = 4
v_write_exec_then_vr_read_thread0_as_lane_select = 4
v_write_exec_then_vw_read_sgpr_as_lane_select = 4

[INTERFACE]
tcrtcc_wdata_sim_vec = tcr_tcc\d+_wdata_sim.vec
tcctcr_rdata_sim_vec = tcc\d+_tcr_rdata_sim.vec
spi_perf_vec = spi\d+_perf.vec
tcp_perf_vec = tcp\d+_perf.vec
tcc_perf_vec = tcc\d+_perf.vec
[PATTERN]
tcrtcc_wdata_ptn = TCR_TCC\d+_wdata(\s+\w+)+
tcctcr_rdata_ptn = TCC\d+_TCR_rdata(\s+\w+)+

